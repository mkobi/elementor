"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Lint = require("tslint");
var tsquery_1 = require("@phenomnomnominal/tsquery");
var Rule = (function (_super) {
    tslib_1.__extends(Rule, _super);
    function Rule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Rule.prototype.apply = function (sourceFile) {
        var _this = this;
        var failures = [];
        var enumDeclarations = tsquery_1.tsquery(sourceFile, "EnumDeclaration");
        enumDeclarations.forEach(function (node) {
            failures.push(new Lint.RuleFailure(sourceFile, node.getStart(), node.getStart() + node.getWidth(), Rule.FAILURE_STRING, _this.ruleName));
        });
        return failures;
    };
    Rule.metadata = {
        description: "Disallows the use of enums.",
        options: null,
        optionsDescription: "Not configurable.",
        requiresTypeInfo: false,
        ruleName: "no-enum",
        type: "functionality",
        typescriptOnly: true
    };
    Rule.FAILURE_STRING = "enum is forbidden";
    return Rule;
}(Lint.Rules.AbstractRule));
exports.Rule = Rule;
